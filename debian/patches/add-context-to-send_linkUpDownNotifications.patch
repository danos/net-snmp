--- a/agent/mibgroup/if-mib/data_access/interface.c
+++ b/agent/mibgroup/if-mib/data_access/interface.c
@@ -707,6 +707,7 @@ netsnmp_access_interface_entry_copy(nets
                 return -2;
         }
     }
+    lhs->rdid = rhs->rdid;
     lhs->type = rhs->type;
     lhs->speed = rhs->speed;
     lhs->speed_high = rhs->speed_high;
--- a/agent/mibgroup/if-mib/data_access/interface_linux.c
+++ b/agent/mibgroup/if-mib/data_access/interface_linux.c
@@ -451,6 +451,31 @@ _arch_interface_flags_v6_get(netsnmp_int
 /**
  * @internal
  */
+static void
+_arch_interface_rdid_get(netsnmp_interface_entry *entry)
+{
+    FILE           *fin;
+    char           *path = NULL;
+
+    if (asprintf(&path, "/sys/class/net/%s/rdid", entry->name) < 0) {
+        return;
+    }
+
+    if (!(fin = fopen(path, "r"))) {
+        DEBUGMSGTL(("access:interface",
+                    "Failed to open %s\n", path));
+        goto fail;
+    }
+
+    fscanf(fin, "%u", &entry->rdid);
+    fclose(fin);
+  fail:
+    free(path);
+}
+
+/**
+ * @internal
+ */
 static int
 _parse_stats(netsnmp_interface_entry *entry, char *stats, int expected)
 {
@@ -847,6 +872,8 @@ netsnmp_arch_interface_container_load(ne
 #endif
         else
             netsnmp_access_interface_entry_guess_speed(entry);
+
+        _arch_interface_rdid_get(entry);
         
         netsnmp_access_interface_ioctl_flags_get(fd, entry);
 
--- a/agent/mibgroup/if-mib/ifTable/ifTable_data_access.c
+++ b/agent/mibgroup/if-mib/ifTable/ifTable_data_access.c
@@ -208,7 +208,7 @@ ifTable_container_init(netsnmp_container
 }                               /* ifTable_container_init */
 
 void
-send_linkUpDownNotifications(oid *notification_oid, size_t notification_oid_len, int if_index, int if_admin_status, int if_oper_status)
+send_linkUpDownNotifications(oid *notification_oid, size_t notification_oid_len, int if_index, int if_admin_status, int if_oper_status, const char *context)
 {
     /*
      * In the notification, we have to assign our notification OID to
@@ -296,7 +296,7 @@ send_linkUpDownNotifications(oid *notifi
      * section of the snmpd.conf manual page. 
      */
     DEBUGMSGTL(("rsys:linkUpDownNotifications", "sending the trap\n"));
-    send_v2trap(notification_vars);
+    send_v3trap(notification_vars, context);
 
     /*
      * free the created notification variable list 
@@ -423,18 +423,25 @@ _check_interface_entry_for_updates(ifTab
         rowreq_ctx->data.ifLastChange = netsnmp_get_agent_uptime();
 #ifdef USING_IF_MIB_IFXTABLE_IFXTABLE_MODULE
         if (rowreq_ctx->data.ifLinkUpDownTrapEnable == 1) {
+            /* get the vrfname of the interface */
+            char *context;
+
+            context = netsnmp_context_get_context(rowreq_ctx->data.ifRdid);
+
             if (rowreq_ctx->data.ifOperStatus == IFOPERSTATUS_UP) {
                 oid notification_oid[] = { 1, 3, 6, 1, 6, 3, 1, 1, 5, 4 };
                 send_linkUpDownNotifications(notification_oid, OID_LENGTH(notification_oid),
                                              rowreq_ctx->tbl_idx.ifIndex,
                                              rowreq_ctx->data.ifAdminStatus,
-                                             rowreq_ctx->data.ifOperStatus);
+                                             rowreq_ctx->data.ifOperStatus,
+					     context);
             } else if (rowreq_ctx->data.ifOperStatus == IFOPERSTATUS_DOWN) {
                 oid notification_oid[] = { 1, 3, 6, 1, 6, 3, 1, 1, 5, 3 };
                 send_linkUpDownNotifications(notification_oid, OID_LENGTH(notification_oid),
                                              rowreq_ctx->tbl_idx.ifIndex,
                                              rowreq_ctx->data.ifAdminStatus,
-                                             rowreq_ctx->data.ifOperStatus);
+                                             rowreq_ctx->data.ifOperStatus,
+					     context);
             }
         }
 #endif
--- a/agent/mibgroup/if-mib/ifTable/ifTable_defs.h
+++ b/agent/mibgroup/if-mib/ifTable/ifTable_defs.h
@@ -35,3 +35,4 @@
 #define ifHighSpeed ifentry->speed_high
 #define ifPromiscuousMode ifentry->promiscuous
 #define ifConnectorPresent ifentry->connector_present
+#define ifRdid ifentry->rdid
--- a/include/net-snmp/data_access/interface.h
+++ b/include/net-snmp/data_access/interface.h
@@ -164,6 +164,8 @@ typedef struct netsnmp_interface_entry_s
     u_long  lastchange;
     time_t  discontinuity;
 
+    u_int   rdid;
+
     uint16_t     reasm_max_v4; /* 0..65535 */
     uint16_t     reasm_max_v6; /* 1500..65535 */
     char  admin_status;

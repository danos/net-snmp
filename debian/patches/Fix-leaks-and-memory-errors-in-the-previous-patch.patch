From 88be6b20bb06794f5a7f01dc29d21a1db7726cfc Mon Sep 17 00:00:00 2001
From: Jan Safranek <jsafranek@users.sourceforge.net>
Date: Fri, 24 Apr 2015 13:18:16 +0200
Subject: [PATCH] Fix leaks and memory errors in the previous patch.

---
 agent/mibgroup/ip-mib/data_access/ipaddress_common.c    |  4 +++-
 .../ip-mib/ipAddressTable/ipAddressTable_data_access.c  | 17 ++++++++++++++---
 2 files changed, 17 insertions(+), 4 deletions(-)

--- a/agent/mibgroup/ip-mib/data_access/ipaddress_common.c
+++ b/agent/mibgroup/ip-mib/data_access/ipaddress_common.c
@@ -150,6 +150,7 @@ _remove_duplicates(netsnmp_container *co
 		}
 	}
 	CONTAINER_FREE(container);
+	free(it);
 	return ret;
 }
 
@@ -184,7 +185,8 @@ netsnmp_access_ipaddress_container_load(
         container = NULL;
     }
 
-    container = _remove_duplicates(container, container_flags);
+    if (container)
+        container = _remove_duplicates(container, container_flags);
 
     return container;
 }
--- a/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c
+++ b/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c
@@ -115,7 +115,6 @@ void
 ipAddressTable_container_init(netsnmp_container **container_ptr_ptr,
                               netsnmp_cache * cache)
 {
-	int rc;
     DEBUGMSGTL(("verbose:ipAddressTable:ipAddressTable_container_init",
                 "called\n"));
 
@@ -277,8 +276,7 @@ _add_new_entry(netsnmp_ipaddress_entry *
     netsnmp_assert(NULL != container);
 
     if (to_ignore && CONTAINER_FIND(to_ignore, ipaddress_entry)) {
-        /* this entry already is in 'container', discard it */
-        netsnmp_access_ipaddress_entry_free(ipaddress_entry);
+        /* this entry already is in 'container', skip it */
         return;
     }
     /*
@@ -429,6 +427,19 @@ ipAddressTable_container_load(netsnmp_co
              */
             CONTAINER_REMOVE(tmp_container, NULL);
         }
+        CONTAINER_FREE(tmp_container);
+    }
+
+    if (NULL != tmp_ptr[2]) {
+        /* list of interfaces to be ignored in ipaddress_container - free it */
+        netsnmp_container *to_ignore = (netsnmp_container *) tmp_ptr[2];
+        netsnmp_ipaddress_entry *ipaddress_entry;
+        while (CONTAINER_SIZE(to_ignore)) {
+            ipaddress_entry = (netsnmp_ipaddress_entry*)CONTAINER_FIRST(to_ignore);
+            CONTAINER_REMOVE(to_ignore, ipaddress_entry);
+            netsnmp_access_ipaddress_entry_free(ipaddress_entry);
+        }
+        CONTAINER_FREE(to_ignore);
     }
 
     DEBUGMSGT(("verbose:ipAddressTable:ipAddressTable_cache_load",
